function [population,it] = myGA(f,V,M,lb,ub)
	% myGA(f,V,M,lb,ub)
	% f : function to minimize
	% V : Dimension of the search space.
	% M : Number of objectives.
	% lb = lower bound vector.
	% ub = upper bound vector. 

	%% DEFINITION OF THE PARAMETERS

	N = 30;    % Population size
	NP = 20;    % Size of the mating pool
	NC = 20;    % Number of children generated by generation
    % MUST BE EVEN
    assert(mod(NC,2) == 0)
	P = 0.5;     % probability of recombination

	verbose = true; % (true) plots each iteration

	%% GENETIC ALGORITHM

	% Generation of the intial population
	population = initPopulation(N,V);

	population = evaluatePopulation(population,f,N,V,M,lb,ub);

	population = sortPopulation(population,V,M, NP);

	% Main loop
	it = 1;
    specialIt = 1;
	runFlag = true;
	while runFlag
        
		parents = selectionTournament(population,NP,V,M);	
        %size(parents)

		offspring = geneticOperators(parents,f,N,NC,P,V,M,lb,ub);
        
		population = [ population(:,1:V+M) ; offspring(:,1:V+M) ];

		[population, sameFront] = sortPopulation(population,V,M, NP);
        %population(:,1:(V+M))

		population = cropPopulation(population,N);

		% Visualization
		if verbose
			illustratePopulation(population,V,M,lb,ub,it);
			drawnow;
			pause(0.01);
        end
        it = it+1;
        if sameFront
            specialIt = specialIt + 1;
        else
            specialIt = 0;
        end
		runFlag = stopCriterion(specialIt);
    end
	
end
